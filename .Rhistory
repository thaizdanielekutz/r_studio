c(h0,h1)
c(variancia0,variancia1)
#Comparação
plot(a0)
iris
view(iris)
#amostra0
a0=iris$Sepal.Length
a0
#Amplitude amostral
h0= diff(range(a0))
h0
#Variância amostral
variancia0=var(a0)
varianca0
#Variância populacional
var(a0)*(length(a0)-1)/length(a0)
#Desvio padrão amostral
sd(a0)
sqrt(variancia0)
#Coeficiente de variação amostral
cv=sd(a0)/mean(a0)*100
cv
#amostral
a1=iris$Petal.Length
#Amplitude amostral
h1= diff(range(a1))
h1
#Variância amostral
variancia1=var(a1)
varianca1
#Variância populacional
var(a1)*(length(a1)-1)/length(a1)
#Desvio padrão amostral
sd(a1)
variancia1
#Variância populacional
var(a1)*(length(a1)-1)/length(a1)
#Desvio padrão amostral
sd(a1)
sqrt(variancia1)
#Coeficiente de variação amostral
cv=sd(a1)/mean(a1)*100
cv
c(h0,h1)
c(variancia0,variancia1)
#Comparação
plot(a0)
#Desvio padrão amostral
sd(a0)
sd0 = sd(a0)
sd0
sd1 = sd(a1)
sd1
c(sd0,sd1)
#Coeficiente de variação amostral
cv0=sd(a0)/mean(a0)*100
cv0
#Coeficiente de variação amostral
cv1=sd(a1)/mean(a1)*100
cv1
c(cv0,cv1)
abline(h=mean(a0))
plot(a1)
c(mean(a0),mean(a1))
source("~/r_studio/r_studio/Gráficos Qualitativos Nominais.R")
source("~/r_studio/r_studio/Gráficos Qualitativos Nominais.R")
source("~/r_studio/r_studio/Gráficos Qualitativos Nominais.R")
sexo=c("M", "F")
sexo
cor=c("Preto", "Castanho", "Azul", "Verde")
cor
cigarro=c("Fumante", "Não Fumante")
cigarro
doente=c("Doente", "Sádio")
doente
estado_civil=c("Solteiro(a)", "Casado(a)")
estado_civil
a_sexo=sample(sexo, size=100, replace= TRUE)
a_sexo
a_cor_olhos=sample(cor, size=100, replace= TRUE)
a_cor_olhos
a_fumante=sample(cigarro, size=100, replace= TRUE)
a_fumante
a_doente=sample(doente, size=100, replace= TRUE)
a_doente
a_estado_civil=sample(estado_civil, size=100, replace= TRUE)
a_estado_civil
a_dummy_estado_civil=ifelse(a_estado_civil=="Solteiro(a)", "1", "0")
a_dummy_estado_civil
variaveis_categorias_nominais=data.frame(a_sexo,
a_cor_olhos,
a_fumante,
a_doente,
a_estado_civil,
a_dummy_estado_civil)
variaveis_categorias_nominais
view(variaveis_categorias_nominais)
#Gráfico de colunas ou barras verticais
grafico_coluna_geral=ggplot(variaveis_categorias_nominais,aes(a_cor_olhos)) +
geom_bar(position = "dodge", fill= "red")+
ggtitle("Número de alunos por cor dos olhos")+
xlab("cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
ggplotly(grafico_coluna_geral)
#Gráfico de colunas ou barras verticais por sexo
grafico_coluna=ggplot(variaveis_categorias_nominais, aes(a_cor_olhos, fill= a_sexo)) +
geom_bar(position = "dodge")+
ggtitle("Número de alunos por cor dos olhos e sexo")+
labs(fill="sexo")+
xlab("Cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
ggplotly(grafico_coluna)
#Gráfico de colunas ou barras verticais (%)
grafico_coluna_porcent=ggplot(variaveis_categorias_nominais, aes(a_cor_olhos, fill=a_sexo)) +
geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)))+
ggtitle("Número de alunos por cor dos olhos e sexo (%)") +
scale_y_continuous(labels = percent)+
labs(fill="Sexo")+
xlab("Cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
ggplotly(grafico_coluna_porcent)
#Gráfico de colunas ou barras verticais empilhadas (%)
grafico_colunas_empilhadas=ggplot(variaveis_categorias_nominais, aes(a_cor_olhos, fill=a_sexo)) +
geom_bar(position = "fill")+
ggtitle("Número de alunos por cor dos olhos e sexo")+
labs(fill="Sexo")+
xlab("Cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
ggplotly(grafico_colunas_empilhadas)
#Gráfico de barras horizontais
grafico_barras_horizontais=grafico_coluna +coord_flip()
ggplotly(grafico_barras_horizontais)
#Gráfico de barras horizontais por sexo
grafico_barras_horizontais_por_sexo=grafico_coluna + coord_flip()+ facet_grid(~a_sexo)
ggplotly(grafico_barras_horizontais)
grid.arrange(grafico_coluna_geral,
grafico_coluna,
grafico_coluna_porcent,
grafico_barras_horizontais,
grafico_barras_horizontais_por_sexo,
grafico_colunas_empilhadas, nrow=3, ncol=2)
a_dummy_estado_civil
variaveis_categorias_nominais=data.frame(a_sexo,
a_cor_olhos,
a_fumante,
a_doente,
a_estado_civil,
a_dummy_estado_civil)
variaveis_categorias_nominais
view(variaveis_categorias_nominais)
variaveis_categorias_nominais
view(variaveis_categorias_nominais)
grid.arrange(grafico_coluna_geral,
grafico_coluna,
grafico_coluna_porcent,
grafico_barras_horizontais,
grafico_barras_horizontais_por_sexo,
grafico_colunas_empilhadas, nrow=3, ncol=2)
#Estudar Cores
#Gráfico de colunas ou barras verticais
grafico_coluna_geral=ggplot(variaveis_categorias_nominais,aes(a_cor_olhos)) +
geom_bar(position = "dodge", fill= "red")+
ggtitle("Número de alunos por cor dos olhos")+
xlab("cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
#Gráfico de barras horizontais por sexo
grafico_barras_horizontais_por_sexo=grafico_coluna + coord_flip()+ facet_grid(~a_sexo)
ggplotly(grafico_horizontais_por_sexo)
source("~/r_studio/r_studio/Gráficos Qualitativos Nominais.R")
sexo=c("M", "F")
sexo
cor=c("Preto", "Castanho", "Azul", "Verde")
cor
cigarro=c("Fumante", "Não Fumante")
cigarro
doente=c("Doente", "Sádio")
doente
estado_civil=c("Solteiro(a)", "Casado(a)")
estado_civil
a_sexo=sample(sexo, size=100, replace= TRUE)
a_sexo
a_cor_olhos=sample(cor, size=100, replace= TRUE)
a_cor_olhos
a_fumante=sample(cigarro, size=100, replace= TRUE)
a_fumante
a_doente=sample(doente, size=100, replace= TRUE)
a_doente
a_estado_civil=sample(estado_civil, size=100, replace= TRUE)
a_estado_civil
a_dummy_estado_civil=ifelse(a_estado_civil=="Solteiro(a)", "1", "0")
a_dummy_estado_civil
variaveis_categorias_nominais=data.frame(a_sexo,
a_cor_olhos,
a_fumante,
a_doente,
a_estado_civil,
a_dummy_estado_civil)
variaveis_categorias_nominais
view(variaveis_categorias_nominais)
#Gráfico de colunas ou barras verticais
grafico_coluna_geral=ggplot(variaveis_categorias_nominais,aes(a_cor_olhos)) +
geom_bar(position = "dodge", fill= "red")+
ggtitle("Número de alunos por cor dos olhos")+
xlab("cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
ggplotly(grafico_coluna_geral)
#Gráfico de colunas ou barras verticais por sexo
grafico_coluna=ggplot(variaveis_categorias_nominais, aes(a_cor_olhos, fill= a_sexo)) +
geom_bar(position = "dodge")+
ggtitle("Número de alunos por cor dos olhos e sexo")+
labs(fill="sexo")+
xlab("Cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
ggplotly(grafico_coluna)
#Gráfico de colunas ou barras verticais (%)
grafico_coluna_porcent=ggplot(variaveis_categorias_nominais, aes(a_cor_olhos, fill=a_sexo)) +
geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)))+
ggtitle("Número de alunos por cor dos olhos e sexo (%)") +
scale_y_continuous(labels = percent)+
labs(fill="Sexo")+
xlab("Cor dos olhos")+
ylab("Frequência simples (Quantidade de alunos)")
source("~/r_studio/r_studio/Gráficos Qualitativos Nominais.R")
require(ggplot2)
require(dplyr)
require(scales)
require(plotly)
require(gridExtra)
require(tidyverse)
dados=iris
grafico_hist = ggplot(dados, aes(x=Sepal.Length))+
geom_histogram(fill="lightblue", bins=30)+
xlab("Tamanho das Sépalas")+
ylab("Frequência simples")+
ggtitle("Gráfico histograma do tamanho da Sépala das Plantas")+
theme()
grafico_hist
ggplotly(grafico_hist)
#Gráfico Box-Plot
dados=iris
grafico_boxplot = ggplot(dados, aes(x=Sepal.Length, y=Petal.Length, fill=Species))+
geom_boxplot()+
ggtitle("Gráfico de Box-plot do tamanho da Sépala vs o tamanho das Pétalas das plantas")+
xlab("Tamanho das Sépalas")+
ylab("Tamanho das Pétalas")
grafico_boxplot
#Gráfico de dispersão - cor espécies
dados=iris
grafico_dispersao_cor = ggplot(dados, aes(x=Sepal.Length, y = Petal.Length, col=Species))+
geom_point(size=4)+
ggtitle("Gráfico de Dispersão do tamanho da Sépala vs o tamanho das Pétalas das plantas")+
xlab("Tamanho das Sépalas")+
ylab("Tamanho das Pétalas")
grafico_dispersao_cor
#Gráfico de dispersão - tamanho
dados=iris
grafico_dispersao_tamanho = ggplot(dados, aes(x=Sepal.Length, y = Petal.Length, col=Species))+
geom_point (aes(Species))+
ggtitle("Gráfico de Dispersão do tamanho da Sépala vs o tamanho das Pétalas das plantas")+
xlab("Tamanho das Sépalas")+
ylab("Tamanho das Pétalas")
grafico_dispersao_tamanho
#Gráfico de dispersão - por Spécie
dados=iris
grafico_dispersao_especie = ggplot(dados, aes(x=Sepal.Length, y = Petal.Length, col=Species))+
geom_point (size = 4)+
ggtitle("Gráfico de Dispersão do tamanho da Sépala vs o tamanho das Pétalas das plantas")+
xlab("Tamanho das Sépalas")+
ylab("Tamanho das Pétalas")+
facet_wrap(~Species)
grafico_dispersao_especie
#Gráfico de linhas do desemprego nos Estados Unidos de 1967 a 2015 - Economics
dados2=economics
grafico_linhas = ggplot(economics, aes(x=date, y=unemploy))+
geom_line(col="red")+
xlab("Ano")+
ylab("Desemprego (em milhares)")+
ggtitle("Desemprego nos Estados Unidos de 1967 a 2015 - Economics")
grafico_linhas
#Agrupando os gráficos na mesma janela com ggplot2
grid.arrange(
grafico_hist,
grafico_boxplot,
grafico_dispersao_cor,
grafico_dispersao_tamanho,
grafico_dispersao_especie,
grafico_linhas,
nrow=3, ncol=2)
require(esquisse)
esquisser(viewer = "browser")
